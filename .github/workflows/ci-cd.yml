name: üöÄ Fofana Stock Tracker CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: üß™ Tests & Quality
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: fofana_testing
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4

    - name: üêò Setup PHP 8.3
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql
        coverage: xdebug

    - name: üì¶ Install Dependencies
      run: |
        composer install --no-ansi --no-interaction --prefer-dist
        npm ci

    - name: üîß Setup Environment
      run: |
        cp .env.example .env
        php artisan key:generate

    - name: üèóÔ∏è Build Assets
      run: npm run build

    - name: üß™ Run Tests
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: fofana_testing
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
      run: |
        php artisan migrate --force
        vendor/bin/phpunit

    - name: Run PHP CS Fixer
      run: vendor/bin/php-cs-fixer fix --dry-run --diff

    - name: Run PHPStan
      run: vendor/bin/phpstan analyse

    - name: Start Laravel Server
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: testing
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
      run: |
        php artisan serve --host=0.0.0.0 --port=8000 &
        sleep 5

    - name: Run Lighthouse Accessibility Audit
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          http://localhost:8000/login
          http://localhost:8000/dashboard
        configPath: './lighthouse.config.js'
        uploadArtifacts: true
        temporaryPublicStorage: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Security Audit
      run: |
        composer audit
        npm audit --audit-level moderate

  deploy:
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fofana-stock:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  pwa-audit:
    name: PWA Lighthouse Audit
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite

    - name: Copy .env
      run: cp .env.example .env

    - name: Install PHP Dependencies
      run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Install NPM Dependencies
      run: npm ci

    - name: Generate Application Key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create SQLite Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Run Database Migrations
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan migrate --force

    - name: Build Production Assets
      run: npm run build

    - name: Start Laravel Server
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: |
        php artisan serve --host=0.0.0.0 --port=8000 &
        sleep 10

    - name: Wait for Server
      run: npx wait-on http://localhost:8000 --timeout 30000

    - name: Run Lighthouse PWA Audit
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          http://localhost:8000
          http://localhost:8000/dashboard
          http://localhost:8000/orders
        configPath: '.lighthouseci.config.js'
        uploadArtifacts: true
        temporaryPublicStorage: true

    - name: Upload PWA Audit Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-pwa-results
        path: .lighthouseci/
        retention-days: 30

  pwa-e2e-tests:
    name: PWA E2E Tests
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Copy .env
      run: cp .env.dusk.local .env

    - name: Install Dependencies
      run: |
        composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        npm ci

    - name: Build Assets
      run: npm run build

    - name: Generate Application Key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create SQLite Database
      run: |
        mkdir -p database
        touch database/dusk.sqlite

    - name: Run Database Migrations
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/dusk.sqlite
      run: php artisan migrate --force

    - name: Install Chrome
      uses: browser-actions/setup-chrome@latest

    - name: Run PWA Dusk Tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/dusk.sqlite
      run: |
        php artisan dusk:chrome-driver
        php artisan serve --env=dusk.local --port=8000 &
        sleep 5
        php artisan dusk --filter=PWA

    - name: Upload Dusk Screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: dusk-screenshots
        path: tests/Browser/screenshots
        retention-days: 7

  accessibility:
    name: Accessibility Audit
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql

    - name: Install PHP dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Install Node dependencies
      run: npm ci

    - name: Copy .env
      run: cp .env.example .env

    - name: Generate key
      run: php artisan key:generate

    - name: Build assets
      run: npm run build

    - name: Start Laravel server
      run: php artisan serve --port=8000 &

    - name: Wait for server
      run: npx wait-on http://localhost:8000 --timeout 30000

    - name: Run Pa11y accessibility tests
      run: |
        npx pa11y http://localhost:8000 --runner axe
        npx pa11y http://localhost:8000/login --runner axe --threshold 0
        npx pa11y http://localhost:8000/register --runner axe --threshold 0

    - name: Run Lighthouse accessibility audit
      uses: treosh/lighthouse-ci-action@v9
      with:
        urls: |
          http://localhost:8000
          http://localhost:8000/login
        configPath: ./.lighthouseci.config.js



